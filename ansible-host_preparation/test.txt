Running syntax check...
ansible-playbook tests/test.yml -i tests/inventory 

PLAY [localhost] ***************************************************************

TASK [Gathering Facts] *********************************************************
ok: [localhost]

TASK [ansible-host_preparation : setup] ****************************************
ok: [localhost]

TASK [ansible-host_preparation : Configure apt-cacher-ng if needed] ************
skipping: [localhost]

TASK [ansible-host_preparation : Remove apt-cacher-ng] *************************
ok: [localhost]

TASK [ansible-host_preparation : Change to use official Ubuntu repository] *****
skipping: [localhost]

TASK [ansible-host_preparation : Add EPEL repository (CentOS/RHEL)] ************
skipping: [localhost]

TASK [ansible-host_preparation : Add EPEL GPG key (CentOS/RHEL)] ***************
skipping: [localhost]

TASK [ansible-host_preparation : Update packages to the latest version (Ubuntu/Debian)] ***
ok: [localhost]

TASK [ansible-host_preparation : Update packages to the latest version (CentOS/RHEL)] ***
skipping: [localhost]

TASK [ansible-host_preparation : Install base packages (Ubuntu/Debian)] ********
ok: [localhost]

TASK [ansible-host_preparation : Install base packages (CentOS/RHEL)] **********
skipping: [localhost]

TASK [ansible-host_preparation : Ensure Nginx is enabled and running (Ubuntu/Debian)] ***
ok: [localhost]

TASK [ansible-host_preparation : Ensure Nginx is enabled and running (CentOS/RHEL)] ***
skipping: [localhost]

TASK [ansible-host_preparation : Ensure locales package is installed (Ubuntu/Debian)] ***
ok: [localhost]

TASK [ansible-host_preparation : Ensure the locale exists (Ubuntu/Debian)] *****
ok: [localhost]

TASK [ansible-host_preparation : Set default locale (Debian/Ubuntu without systemd)] ***
changed: [localhost]

TASK [ansible-host_preparation : Configure hostname] ***************************
skipping: [localhost]

TASK [ansible-host_preparation : Configure hosts file] *************************
skipping: [localhost]

TASK [ansible-host_preparation : Install latest kernel from Xenial] ************
skipping: [localhost]

TASK [ansible-host_preparation : Check if a reboot is required (Ubuntu/Debian)] ***
ok: [localhost]

TASK [ansible-host_preparation : Check if a reboot is required (CentOS/RHEL)] ***
skipping: [localhost]

TASK [ansible-host_preparation : include_tasks] ********************************
skipping: [localhost]

TASK [ansible-host_preparation : Do autoremove unused packages (in this case it is old kernel)] ***
ok: [localhost]

TASK [ansible-host_preparation : Check if a reboot is required (Ubuntu/Debian)] ***
ok: [localhost]

TASK [ansible-host_preparation : Check if a reboot is required (CentOS/RHEL)] ***
skipping: [localhost]

TASK [ansible-host_preparation : include_tasks] ********************************
skipping: [localhost]

TASK [ansible-host_preparation : Configure security limits] ********************
skipping: [localhost] => (item={'domain': '*', 'limit_type': 'soft', 'limit_item': 'nofile', 'value': 1000000}) 
skipping: [localhost] => (item={'domain': '*', 'limit_type': 'hard', 'limit_item': 'nofile', 'value': 1000000}) 
skipping: [localhost] => (item={'domain': '*', 'limit_type': 'soft', 'limit_item': 'nproc', 'value': 393216}) 
skipping: [localhost] => (item={'domain': '*', 'limit_type': 'hard', 'limit_item': 'nproc', 'value': 393216}) 
skipping: [localhost]

TASK [ansible-host_preparation : Enable modprobe modules] **********************
skipping: [localhost]

TASK [ansible-host_preparation : Configure tuning in sysctl.conf] **************
skipping: [localhost] => (item={'key': 'fs.file-max', 'value': 1000000}) 
skipping: [localhost] => (item={'key': 'net.ipv4.tcp_max_syn_backlog', 'value': 65535}) 
skipping: [localhost] => (item={'key': 'net.ipv4.tcp_tw_reuse', 'value': 1}) 
skipping: [localhost] => (item={'key': 'net.ipv4.tcp_tw_recycle', 'value': 1}) 
skipping: [localhost] => (item={'key': 'net.ipv4.ip_local_port_range', 'value': '1024 65000'}) 
skipping: [localhost] => (item={'key': 'net.ipv4.tcp_max_tw_buckets', 'value': 400000}) 
skipping: [localhost] => (item={'key': 'net.ipv4.tcp_no_metrics_save', 'value': 1}) 
skipping: [localhost] => (item={'key': 'net.ipv4.tcp_rmem', 'value': '4096 87380 16777216'}) 
skipping: [localhost] => (item={'key': 'net.ipv4.tcp_syn_retries', 'value': 2}) 
skipping: [localhost] => (item={'key': 'net.ipv4.tcp_synack_retries', 'value': 2}) 
skipping: [localhost] => (item={'key': 'net.ipv4.tcp_wmem', 'value': '4096 65536 16777216'}) 
skipping: [localhost] => (item={'key': 'net.core.somaxconn', 'value': 65535}) 
skipping: [localhost] => (item={'key': 'net.core.netdev_max_backlog', 'value': 4096}) 
skipping: [localhost] => (item={'key': 'net.core.rmem_max', 'value': 16777216}) 
skipping: [localhost] => (item={'key': 'net.core.wmem_max', 'value': 16777216}) 
skipping: [localhost] => (item={'key': 'net.nf_conntrack_max', 'value': 1048576}) 
skipping: [localhost] => (item={'key': 'vm.min_free_kbytes', 'value': 65536}) 
skipping: [localhost] => (item={'key': 'vm.overcommit_memory', 'value': 1}) 
skipping: [localhost] => (item={'key': 'vm.swappiness', 'value': 0}) 
skipping: [localhost]

TASK [ansible-host_preparation : Create new rc.local (Ubuntu/Debian)] **********
ok: [localhost]

TASK [ansible-host_preparation : Create new rc.local (CentOS/RHEL)] ************
skipping: [localhost]

TASK [ansible-host_preparation : Tuning hugepage (Ubuntu/Debian)] **************
skipping: [localhost] => (item={'regexp': '^echo never > /sys/kernel/mm/transparent_hugepage/enabled', 'line': 'echo never > /sys/kernel/mm/transparent_hugepage/enabled'}) 
skipping: [localhost] => (item={'regexp': '^echo never > /sys/kernel/mm/transparent_hugepage/defrag', 'line': 'echo never > /sys/kernel/mm/transparent_hugepage/defrag'}) 
skipping: [localhost]

TASK [ansible-host_preparation : Tuning hugepage (CentOS/RHEL)] ****************
skipping: [localhost] => (item={'regexp': '^echo never > /sys/kernel/mm/transparent_hugepage/enabled', 'line': 'echo never > /sys/kernel/mm/transparent_hugepage/enabled'}) 
skipping: [localhost] => (item={'regexp': '^echo never > /sys/kernel/mm/transparent_hugepage/defrag', 'line': 'echo never > /sys/kernel/mm/transparent_hugepage/defrag'}) 
skipping: [localhost]

TASK [ansible-host_preparation : Check if server need to reboot] ***************
skipping: [localhost]

TASK [ansible-host_preparation : (Ansible < 2.7) Reboot target host] ***********
skipping: [localhost]

TASK [ansible-host_preparation : (Ansible < 2.7) Wait SSH to stopped] **********
skipping: [localhost]

TASK [ansible-host_preparation : (Ansible < 2.7) Wait to SSH again] ************
skipping: [localhost]

TASK [ansible-host_preparation : (Ansible >= 2.7) Reboot] **********************
skipping: [localhost]

TASK [ansible-host_preparation : Change sshd port] *****************************
skipping: [localhost]

TASK [ansible-host_preparation : Force to listen to only ssh ip address] *******
skipping: [localhost]

TASK [ansible-host_preparation : Set authorized_keys group paths variable] *****
ok: [localhost] => (item=docker_vm)

TASK [ansible-host_preparation : Searching for authorized_keys files location and set fact for first found] ***
ok: [localhost]

TASK [ansible-host_preparation : Configure authorized_key] *********************
skipping: [localhost]

TASK [ansible-host_preparation : Configure authorized_key for root user] *******
skipping: [localhost]

TASK [ansible-host_preparation : Configure sudoer file to not ask for password when use sudo] ***
skipping: [localhost]

TASK [ansible-host_preparation : Delete password from logged in user] **********
skipping: [localhost]

PLAY RECAP *********************************************************************
localhost                  : ok=15   changed=1    unreachable=0    failed=0    skipped=31   rescued=0    ignored=0   

